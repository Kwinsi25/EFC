from django.db import models
from Accounts.models import CustomerProfile

class ReportLog(models.Model):
    """Model to log reports generated by users or admins.
    (1)User Reports :Details of all registered users, profiles, booking history, complaints, reviews given, wallet balances, etc.

    (2)Booking Reports : All bookings with filters for date, status, user, electrician, service category, and location.

    (3)Service Performance Reports : Performance of each service category: total bookings, revenue generated, average ratings, etc.

    (4)Earnings & Payout Reports : Revenue breakdown, commissions, online payments received, withdrawals made, and wallet balances.

    (5)Electrician Activity Logs : Electrician job history, response rates, ratings, wallet transactions, last active time.

    (6)Complaint Status Summary : Number of complaints, categories (e.g., late arrival, rude behavior), resolution status, and resolution time
    """
    STATUS_CHOICES = [
        ('pdf', 'PDF'),
        ('csv', 'CSV')
    ]
    is_scheduled = models.BooleanField(default=False)
    type = models.CharField(max_length=50)  # booking, earning, etc.
    generated_by = models.ForeignKey(CustomerProfile, on_delete=models.SET_NULL, null=True, related_name='reports_generated')
    export_by = models.ForeignKey(CustomerProfile, on_delete=models.SET_NULL, null=True, related_name='reports_exported')
    username = models.ForeignKey(CustomerProfile, on_delete=models.SET_NULL, null=True, related_name='report_recipient')
    format = models.CharField(max_length=10, choices=STATUS_CHOICES, default='pdf')  # pdf, csv
    frequency = models.CharField(max_length=20, blank=True, null=True)  # daily, weekly, monthly (only for scheduled)
    link = models.URLField(max_length=200, blank=True, null=True)
    created_date = models.DateTimeField(auto_now_add=True)
    updated_date = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.type} report for {self.username}"


class SystemLog(models.Model):
    type = models.CharField(max_length=50)  # login, wallet_update, manual_assign, etc.
    performed_by = models.ForeignKey(CustomerProfile, on_delete=models.SET_NULL, null=True)
    remark = models.TextField(blank=True, null=True)
    created_date = models.DateTimeField(auto_now_add=True)
    updated_date = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.type} by {self.performed_by}"
